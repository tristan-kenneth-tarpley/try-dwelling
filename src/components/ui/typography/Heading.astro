---
import classNames from "../../../utils/classNames";
import {
  sharedTypographyStyles,
  type SharedTypographyProps,
} from "./sharedTypographyProps";

type Level = 1 | 2 | 3 | 4 | 5 | 6;

type Props = SharedTypographyProps & {
  level: Level;
  displayAs?: Level;
  className?: string;
};

const { level, displayAs = level, className: classNameProp } = Astro.props;
const className = classNames(
  sharedTypographyStyles(Astro.props),
  "font-serif tracking-tight",
  {
    1: "text-6xl mb-2",
    2: "text-5xl mb-2",
    3: "text-3xl mb-1.5",
    4: "text-xl mb-1.5 font-semibold",
    5: "text-lg mb-1 font-semibold",
    6: "text-base mb-1 font-semibold",
  }[displayAs],
  "leading-tight",
  classNameProp
);
---

{
  (() => {
    switch (displayAs) {
      case 1:
        return (
          <h1 class={className}>
            <slot />
          </h1>
        );
      case 2:
        return (
          <h2 class={className}>
            <slot />
          </h2>
        );
      case 3:
        return (
          <h3 class={className}>
            <slot />
          </h3>
        );
      case 4:
        return (
          <h4 class={className}>
            <slot />
          </h4>
        );
      case 5:
        return (
          <h5 class={className}>
            <slot />
          </h5>
        );
      case 6:
        return (
          <h6 class={className}>
            <slot />
          </h6>
        );
      default:
        return null;
    }
  })()
}
